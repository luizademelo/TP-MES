// Copyright 2015-2016 gRPC authors.

syntax = "proto3";

package grpc.testing;

option java_package = "io.grpc.testing.integration";

message BoolValue {

  bool value = 1;
}

enum PayloadType {

  COMPRESSABLE = 0;
}

message Payload {

  PayloadType type = 1;

  bytes body = 2;
}

message EchoStatus {
  int32 code = 1;
  string message = 2;
}

enum GrpclbRouteType {

  GRPCLB_ROUTE_TYPE_UNKNOWN = 0;

  GRPCLB_ROUTE_TYPE_FALLBACK = 1;

  GRPCLB_ROUTE_TYPE_BACKEND = 2;
}

message SimpleRequest {

  PayloadType response_type = 1;

  int32 response_size = 2;

  Payload payload = 3;

  bool fill_username = 4;

  bool fill_oauth_scope = 5;

  BoolValue response_compressed = 6;

  EchoStatus response_status = 7;

  BoolValue expect_compressed = 8;

  bool fill_server_id = 9;

  bool fill_grpclb_route_type = 10;

  TestOrcaReport orca_per_query_report = 11;
}

message SimpleResponse {

  Payload payload = 1;

  string username = 2;

  string oauth_scope = 3;

  string server_id = 4;

  GrpclbRouteType grpclb_route_type = 5;

  string hostname = 6;
}

message StreamingInputCallRequest {

  Payload payload = 1;

  BoolValue expect_compressed = 2;

}

message StreamingInputCallResponse {

  int32 aggregated_payload_size = 1;
}

message ResponseParameters {

  int32 size = 1;

  int32 interval_us = 2;

  BoolValue compressed = 3;
}

message StreamingOutputCallRequest {

  PayloadType response_type = 1;

  repeated ResponseParameters response_parameters = 2;

  Payload payload = 3;

  EchoStatus response_status = 7;

  TestOrcaReport orca_oob_report = 8;
}

message StreamingOutputCallResponse {

  Payload payload = 1;
}

message ReconnectParams {
  int32 max_reconnect_backoff_ms = 1;
}

message ReconnectInfo {
  bool passed = 1;
  repeated int32 backoff_ms = 2;
}

message LoadBalancerStatsRequest {

  int32 num_rpcs = 1;

  int32 timeout_sec = 2;

  repeated string metadata_keys = 3;
}

message LoadBalancerStatsResponse {
  enum MetadataType {
    UNKNOWN = 0;
    INITIAL = 1;
    TRAILING = 2;
  }
  message MetadataEntry {

    string key = 1;

    string value = 2;

    MetadataType type = 3;
  }
  message RpcMetadata {

    repeated MetadataEntry metadata = 1;
  }
  message MetadataByPeer {

    repeated RpcMetadata rpc_metadata = 1;
  }
  message RpcsByPeer {

    map<string, int32> rpcs_by_peer = 1;
  }

  map<string, int32> rpcs_by_peer = 1;

  int32 num_failures = 2;
  map<string, RpcsByPeer> rpcs_by_method = 3;

  map<string, MetadataByPeer> metadatas_by_peer = 4;
}

message LoadBalancerAccumulatedStatsRequest {}

message LoadBalancerAccumulatedStatsResponse {

  map<string, int32> num_rpcs_started_by_method = 1 [deprecated = true];

  map<string, int32> num_rpcs_succeeded_by_method = 2 [deprecated = true];

  map<string, int32> num_rpcs_failed_by_method = 3 [deprecated = true];

  message MethodStats {

    int32 rpcs_started = 1;

    map<int32, int32> result = 2;
  }

  map<string, MethodStats> stats_per_method = 4;
}

message ClientConfigureRequest {

  enum RpcType {
    EMPTY_CALL = 0;
    UNARY_CALL = 1;
  }

  message Metadata {
    RpcType type = 1;
    string key = 2;
    string value = 3;
  }

  repeated RpcType types = 1;

  repeated Metadata metadata = 2;

  int32 timeout_sec = 3;
}

message ClientConfigureResponse {}

message MemorySize {
  int64 rss = 1;
}

message TestOrcaReport {
  double cpu_utilization = 1;
  double memory_utilization = 2;
  map<string, double> request_cost = 3;
  map<string, double> utilization = 4;
}

message SetReturnStatusRequest {
  int32 grpc_code_to_return = 1;
  string grpc_status_description = 2;
}

message HookRequest {
  enum HookRequestCommand {

    UNSPECIFIED = 0;

    START = 1;

    STOP = 2;

    RETURN = 3;
  }
  HookRequestCommand command = 1;
  int32 grpc_code_to_return = 2;
  string grpc_status_description = 3;

  int32 server_port = 4;
}

message HookResponse {
}
