<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/proto/grpc/testing/messages.proto

namespace Grpc\Testing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

class StreamingOutputCallRequest extends \Google\Protobuf\Internal\Message
{

    protected $response_type = 0;

    private $response_parameters;

    protected $payload = null;

    protected $response_status = null;

    protected $orca_oob_report = null;

    public function __construct($data = NULL) {
        \GPBMetadata\Src\Proto\Grpc\Testing\Messages::initOnce();
        parent::__construct($data);
    }

    public function getResponseType()
    {
        return $this->response_type;
    }

    public function setResponseType($var)
    {
        GPBUtil::checkEnum($var, \Grpc\Testing\PayloadType::class);
        $this->response_type = $var;

        return $this;
    }

    public function getResponseParameters()
    {
        return $this->response_parameters;
    }

    public function setResponseParameters($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Grpc\Testing\ResponseParameters::class);
        $this->response_parameters = $arr;

        return $this;
    }

    public function getPayload()
    {
        return $this->payload;
    }

    public function hasPayload()
    {
        return isset($this->payload);
    }

    public function clearPayload()
    {
        unset($this->payload);
    }

    public function setPayload($var)
    {
        GPBUtil::checkMessage($var, \Grpc\Testing\Payload::class);
        $this->payload = $var;

        return $this;
    }

    public function getResponseStatus()
    {
        return $this->response_status;
    }

    public function hasResponseStatus()
    {
        return isset($this->response_status);
    }

    public function clearResponseStatus()
    {
        unset($this->response_status);
    }

    public function setResponseStatus($var)
    {
        GPBUtil::checkMessage($var, \Grpc\Testing\EchoStatus::class);
        $this->response_status = $var;

        return $this;
    }

    public function getOrcaOobReport()
    {
        return $this->orca_oob_report;
    }

    public function hasOrcaOobReport()
    {
        return isset($this->orca_oob_report);
    }

    public function clearOrcaOobReport()
    {
        unset($this->orca_oob_report);
    }

    public function setOrcaOobReport($var)
    {
        GPBUtil::checkMessage($var, \Grpc\Testing\TestOrcaReport::class);
        $this->orca_oob_report = $var;

        return $this;
    }

}
