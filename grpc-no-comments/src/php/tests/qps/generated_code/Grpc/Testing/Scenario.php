<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/proto/grpc/testing/control.proto

namespace Grpc\Testing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

class Scenario extends \Google\Protobuf\Internal\Message
{

    protected $name = '';

    protected $client_config = null;

    protected $num_clients = 0;

    protected $server_config = null;

    protected $num_servers = 0;

    protected $warmup_seconds = 0;

    protected $benchmark_seconds = 0;

    protected $spawn_local_worker_count = 0;

    public function __construct($data = NULL) {
        \GPBMetadata\Src\Proto\Grpc\Testing\Control::initOnce();
        parent::__construct($data);
    }

    public function getName()
    {
        return $this->name;
    }

    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    public function getClientConfig()
    {
        return $this->client_config;
    }

    public function setClientConfig($var)
    {
        GPBUtil::checkMessage($var, \Grpc\Testing\ClientConfig::class);
        $this->client_config = $var;

        return $this;
    }

    public function getNumClients()
    {
        return $this->num_clients;
    }

    public function setNumClients($var)
    {
        GPBUtil::checkInt32($var);
        $this->num_clients = $var;

        return $this;
    }

    public function getServerConfig()
    {
        return $this->server_config;
    }

    public function setServerConfig($var)
    {
        GPBUtil::checkMessage($var, \Grpc\Testing\ServerConfig::class);
        $this->server_config = $var;

        return $this;
    }

    public function getNumServers()
    {
        return $this->num_servers;
    }

    public function setNumServers($var)
    {
        GPBUtil::checkInt32($var);
        $this->num_servers = $var;

        return $this;
    }

    public function getWarmupSeconds()
    {
        return $this->warmup_seconds;
    }

    public function setWarmupSeconds($var)
    {
        GPBUtil::checkInt32($var);
        $this->warmup_seconds = $var;

        return $this;
    }

    public function getBenchmarkSeconds()
    {
        return $this->benchmark_seconds;
    }

    public function setBenchmarkSeconds($var)
    {
        GPBUtil::checkInt32($var);
        $this->benchmark_seconds = $var;

        return $this;
    }

    public function getSpawnLocalWorkerCount()
    {
        return $this->spawn_local_worker_count;
    }

    public function setSpawnLocalWorkerCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->spawn_local_worker_count = $var;

        return $this;
    }

}
