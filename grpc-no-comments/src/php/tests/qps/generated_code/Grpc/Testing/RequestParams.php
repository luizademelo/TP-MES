<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/proto/grpc/testing/echo_messages.proto

namespace Grpc\Testing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

class RequestParams extends \Google\Protobuf\Internal\Message
{

    protected $echo_deadline = false;

    protected $client_cancel_after_us = 0;

    protected $server_cancel_after_us = 0;

    protected $echo_metadata = false;

    protected $check_auth_context = false;

    protected $response_message_length = 0;

    protected $echo_peer = false;

    protected $expected_client_identity = '';

    protected $skip_cancelled_check = false;

    protected $expected_transport_security_type = '';

    protected $debug_info = null;

    protected $server_die = false;

    protected $binary_error_details = '';

    protected $expected_error = null;

    protected $server_sleep_us = 0;

    protected $backend_channel_idx = 0;

    protected $echo_metadata_initially = false;

    protected $server_notify_client_when_started = false;

    public function __construct($data = NULL) {
        \GPBMetadata\Src\Proto\Grpc\Testing\EchoMessages::initOnce();
        parent::__construct($data);
    }

    public function getEchoDeadline()
    {
        return $this->echo_deadline;
    }

    public function setEchoDeadline($var)
    {
        GPBUtil::checkBool($var);
        $this->echo_deadline = $var;

        return $this;
    }

    public function getClientCancelAfterUs()
    {
        return $this->client_cancel_after_us;
    }

    public function setClientCancelAfterUs($var)
    {
        GPBUtil::checkInt32($var);
        $this->client_cancel_after_us = $var;

        return $this;
    }

    public function getServerCancelAfterUs()
    {
        return $this->server_cancel_after_us;
    }

    public function setServerCancelAfterUs($var)
    {
        GPBUtil::checkInt32($var);
        $this->server_cancel_after_us = $var;

        return $this;
    }

    public function getEchoMetadata()
    {
        return $this->echo_metadata;
    }

    public function setEchoMetadata($var)
    {
        GPBUtil::checkBool($var);
        $this->echo_metadata = $var;

        return $this;
    }

    public function getCheckAuthContext()
    {
        return $this->check_auth_context;
    }

    public function setCheckAuthContext($var)
    {
        GPBUtil::checkBool($var);
        $this->check_auth_context = $var;

        return $this;
    }

    public function getResponseMessageLength()
    {
        return $this->response_message_length;
    }

    public function setResponseMessageLength($var)
    {
        GPBUtil::checkInt32($var);
        $this->response_message_length = $var;

        return $this;
    }

    public function getEchoPeer()
    {
        return $this->echo_peer;
    }

    public function setEchoPeer($var)
    {
        GPBUtil::checkBool($var);
        $this->echo_peer = $var;

        return $this;
    }

    public function getExpectedClientIdentity()
    {
        return $this->expected_client_identity;
    }

    public function setExpectedClientIdentity($var)
    {
        GPBUtil::checkString($var, True);
        $this->expected_client_identity = $var;

        return $this;
    }

    public function getSkipCancelledCheck()
    {
        return $this->skip_cancelled_check;
    }

    public function setSkipCancelledCheck($var)
    {
        GPBUtil::checkBool($var);
        $this->skip_cancelled_check = $var;

        return $this;
    }

    public function getExpectedTransportSecurityType()
    {
        return $this->expected_transport_security_type;
    }

    public function setExpectedTransportSecurityType($var)
    {
        GPBUtil::checkString($var, True);
        $this->expected_transport_security_type = $var;

        return $this;
    }

    public function getDebugInfo()
    {
        return $this->debug_info;
    }

    public function setDebugInfo($var)
    {
        GPBUtil::checkMessage($var, \Grpc\Testing\DebugInfo::class);
        $this->debug_info = $var;

        return $this;
    }

    public function getServerDie()
    {
        return $this->server_die;
    }

    public function setServerDie($var)
    {
        GPBUtil::checkBool($var);
        $this->server_die = $var;

        return $this;
    }

    public function getBinaryErrorDetails()
    {
        return $this->binary_error_details;
    }

    public function setBinaryErrorDetails($var)
    {
        GPBUtil::checkString($var, True);
        $this->binary_error_details = $var;

        return $this;
    }

    public function getExpectedError()
    {
        return $this->expected_error;
    }

    public function setExpectedError($var)
    {
        GPBUtil::checkMessage($var, \Grpc\Testing\ErrorStatus::class);
        $this->expected_error = $var;

        return $this;
    }

    public function getServerSleepUs()
    {
        return $this->server_sleep_us;
    }

    public function setServerSleepUs($var)
    {
        GPBUtil::checkInt32($var);
        $this->server_sleep_us = $var;

        return $this;
    }

    public function getBackendChannelIdx()
    {
        return $this->backend_channel_idx;
    }

    public function setBackendChannelIdx($var)
    {
        GPBUtil::checkInt32($var);
        $this->backend_channel_idx = $var;

        return $this;
    }

    public function getEchoMetadataInitially()
    {
        return $this->echo_metadata_initially;
    }

    public function setEchoMetadataInitially($var)
    {
        GPBUtil::checkBool($var);
        $this->echo_metadata_initially = $var;

        return $this;
    }

    public function getServerNotifyClientWhenStarted()
    {
        return $this->server_notify_client_when_started;
    }

    public function setServerNotifyClientWhenStarted($var)
    {
        GPBUtil::checkBool($var);
        $this->server_notify_client_when_started = $var;

        return $this;
    }

}
