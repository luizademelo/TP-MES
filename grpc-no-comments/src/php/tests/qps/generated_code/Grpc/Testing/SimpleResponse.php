<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/proto/grpc/testing/messages.proto

namespace Grpc\Testing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

class SimpleResponse extends \Google\Protobuf\Internal\Message
{

    protected $payload = null;

    protected $username = '';

    protected $oauth_scope = '';

    protected $server_id = '';

    protected $grpclb_route_type = 0;

    protected $hostname = '';

    public function __construct($data = NULL) {
        \GPBMetadata\Src\Proto\Grpc\Testing\Messages::initOnce();
        parent::__construct($data);
    }

    public function getPayload()
    {
        return $this->payload;
    }

    public function setPayload($var)
    {
        GPBUtil::checkMessage($var, \Grpc\Testing\Payload::class);
        $this->payload = $var;

        return $this;
    }

    public function getUsername()
    {
        return $this->username;
    }

    public function setUsername($var)
    {
        GPBUtil::checkString($var, True);
        $this->username = $var;

        return $this;
    }

    public function getOauthScope()
    {
        return $this->oauth_scope;
    }

    public function setOauthScope($var)
    {
        GPBUtil::checkString($var, True);
        $this->oauth_scope = $var;

        return $this;
    }

    public function getServerId()
    {
        return $this->server_id;
    }

    public function setServerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->server_id = $var;

        return $this;
    }

    public function getGrpclbRouteType()
    {
        return $this->grpclb_route_type;
    }

    public function setGrpclbRouteType($var)
    {
        GPBUtil::checkEnum($var, \Grpc\Testing\GrpclbRouteType::class);
        $this->grpclb_route_type = $var;

        return $this;
    }

    public function getHostname()
    {
        return $this->hostname;
    }

    public function setHostname($var)
    {
        GPBUtil::checkString($var, True);
        $this->hostname = $var;

        return $this;
    }

}
